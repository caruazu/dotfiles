#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

# Function to log messages with timestamps
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $*"
}

# Prompt for sudo password upfront to minimize prompts
if ! sudo -v; then
    log "You need sudo privileges to run this script."
    exit 1
fi

# Keep-alive: update existing sudo time stamp if set, otherwise do nothing.
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Check for required commands
for cmd in curl jq unzip; do
    if ! command -v "$cmd" &> /dev/null; then
        log "$cmd is required but not installed. Please install '$cmd' and try again."
        exit 1
    fi
done

# Variables
FONT_DIR="/usr/share/fonts/nerd-fonts"
TEMP_DIR=$(mktemp -d)

# Cleanup function to remove temporary files
cleanup() {
    rm -rf "$TEMP_DIR"
}
trap cleanup EXIT

# Create font directory if it doesn't exist
if [[ ! -d "$FONT_DIR" ]]; then
    log "Creating font directory at $FONT_DIR..."
    sudo mkdir -p "$FONT_DIR"
fi

# Fetch the latest release data from GitHub
log "Fetching the latest Nerd Fonts release data..."
LATEST_RELEASE_JSON=$(curl -s https://api.github.com/repos/ryanoasis/nerd-fonts/releases/latest)

# Array of font names to install
FONT_NAMES=("RobotoMono.zip" "UbuntuMono.zip")

for FONT_ARCHIVE in "${FONT_NAMES[@]}"; do
    # Extract the download URL for the font
    ASSET_URL=$(echo "$LATEST_RELEASE_JSON" | jq -r --arg FONT_ARCHIVE "$FONT_ARCHIVE" '.assets[] | select(.name == $FONT_ARCHIVE) | .browser_download_url')

    if [[ -z "$ASSET_URL" ]]; then
        log "$FONT_ARCHIVE not found in the latest release."
        continue
    fi

    # Download and install the font
    log "Downloading $FONT_ARCHIVE..."
    if ! curl -L -o "$TEMP_DIR/$FONT_ARCHIVE" "$ASSET_URL"; then
        log "Failed to download $FONT_ARCHIVE."
        continue
    fi

    # Extract the font archive
    log "Extracting $FONT_ARCHIVE..."
    unzip -q "$TEMP_DIR/$FONT_ARCHIVE" -d "$TEMP_DIR"

    # Find and install font files
    while IFS= read -r -d '' FONT_FILE; do
        FONT_NAME=$(basename "$FONT_FILE")
        if [[ -f "$FONT_DIR/$FONT_NAME" ]]; then
            log "Removing existing font $FONT_NAME..."
            sudo rm -f "$FONT_DIR/$FONT_NAME"
        fi
        log "Installing $FONT_NAME..."
        sudo cp "$FONT_FILE" "$FONT_DIR"
    done < <(find "$TEMP_DIR" -type f \( -iname "*.ttf" -o -iname "*.otf" \) -print0)

    # Clean up extracted files to avoid conflicts in the next iteration
    rm -rf "$TEMP_DIR"/*
done

# Update the font cache
log "Updating font cache..."
sudo fc-cache -f -v

log "Nerd Fonts installation complete."
